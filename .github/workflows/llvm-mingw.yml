name: llvm-mingw

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build-test:
    strategy:
      matrix:
        os:
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Build
        shell: bash
        run: |
          mkdir -p build/tools
          . 3rd/ovbase/setup-llvm-mingw.bash --dir $PWD/build/tools
          cd build
          for arch in i686 x86_64; do
            rm -rf ovbase-$arch/CmakeCache.txt && cmake -S ../3rd/ovbase -B ovbase-$arch --preset debug -DFORMAT_SOURCES=OFF -DCMAKE_INSTALL_PREFIX=local -DCMAKE_TOOLCHAIN_FILE=cmake/llvm-mingw.cmake -DCMAKE_C_COMPILER=$arch-w64-mingw32-clang
            cmake --build ovbase-$arch && ctest --test-dir ovbase-$arch --output-on-failure --output-junit testlog.xml
            
            rm -rf ovutil-$arch/CmakeCache.txt && cmake -S .. -B ovutil-$arch --preset debug -DOVBASE_PATH=$(pwd)/ovbase-$arch -DFORMAT_SOURCES=ON -DCMAKE_INSTALL_PREFIX=local -DCMAKE_TOOLCHAIN_FILE=3rd/ovbase/cmake/llvm-mingw.cmake -DCMAKE_C_COMPILER=$arch-w64-mingw32-clang
            cmake --build ovutil-$arch && ctest --test-dir ovutil-$arch --output-on-failure --output-junit testlog.xml
          done
